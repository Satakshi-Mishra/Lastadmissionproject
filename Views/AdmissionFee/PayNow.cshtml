@model Lastadmissionproject.Models.AdmissionFee

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>

    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet">
    <style>
        h2 {
            text-align: center;
        }

        .container {
            display: flex;
            align-items: center;
            justify-content: center;
            height: 100vh;
        }





        body {
            background-color: #f4f4f4;
            background-image: url('https://img.freepik.com/free-photo/close-up-education-economy-objects_23-2149113577.jpg?size=626&ext=jpg&ga=GA1.2.951333187.1685453264&semt=ais');
            background-size: cover;
            background-repeat: no-repeat;
        }





        .form-container {
            width: 550px;
            height: 650px;
            padding: 5px;
            background-color: rgb(255,255,255,0.5);
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
            backdrop-filter: blur(5px);
        }

        


    </style>


</head>
<body>
    <div class="container">
        <div class="form-container">
            <h2>Fees Payment</h2>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

        <div class="form-horizontal">

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <div class="form-group">
                @Html.LabelFor(model => model.PaymentId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="input-group">
                        @Html.HiddenFor(model => model.PaymentId, new { htmlAttributes = new { @class = "control-label col-md-2" } })
                        <span class="control-label col-md-2"> @Model.PaymentId</span>
                        @Html.ValidationMessageFor(model => model.AllocationId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AllocationId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AllocationId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AllocationId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.CandidateId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.CandidateId, new { htmlAttributes = new { @class = "form-control" } })
                    <span class="control-label col-md-2">@Model.CandidateId</span>
                    @Html.ValidationMessageFor(model => model.CandidateId, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                    <span class="control-label col-md-4">@Model.FullName</span>
                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FeesAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FeesAmount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FeesAmount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FeesStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.FeesStatus, new { htmlAttributes = new { @class = "form-control" } })
                    <span class="control-label col-md-2">@Model.FeesStatus</span>
                    @Html.ValidationMessageFor(model => model.FeesStatus, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PaymentMode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.PaymentMode, new { htmlAttributes = new { @class = "form-control" } })
                    <span class="control-label col-md-4">@Model.PaymentMode</span>
                    @Html.ValidationMessageFor(model => model.PaymentMode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CardType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                   <span class="control-label col-md-2"> @Html.DropDownListFor(model => model.CardType, new List<SelectListItem>() {
               new SelectListItem() {Text= "DebitCard", Value="DebitCard"},
               new SelectListItem() {Text= "CreditCard", Value="CreditCard"}
               }, "Select..", new { htmlAttributes = new { @class = "form-control" } })</span>
                    @Html.ValidationMessageFor(model => model.CardType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CardNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CardNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CardNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CVV, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CVV, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CVV, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PaymentDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    
                    @Html.HiddenFor(model => model.PaymentDate, new { htmlAttributes = new { @class = "form-control" } })
                    <span class="control-label col-md-5"><b>@Model.PaymentDate</b></span>
                        @Html.ValidationMessageFor(model => model.PaymentDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Make Payment" class="btn btn-default" />
                </div>
            </div>
        </div>
            }

            <div>
                @Html.ActionLink("Back to profile", "Index","Home")
            </div>

            @section Scripts {
                  @Scripts.Render("~/bundles/jqueryval")
                }
</body>
</html>
