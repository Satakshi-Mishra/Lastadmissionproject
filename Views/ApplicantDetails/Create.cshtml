@model Lastadmissionproject.Models.ApplicantDetail

@{
    ViewBag.Title = "Create";
}


<html>
<head>

    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet">
    <style>
       

        .container {
            justify-content: center;
            
        }





        body {
            background-color: #f4f4f4;
            background-image: url('/Content/images/young-female-university-graduate-academic-cap-sitting-table-smiling-pointing-left-future-lawyer-engineer-showing-idea.jpg');
            background-size: cover;
            background-repeat: no-repeat;
            background-position-x: left;
        }





        /*.form-horizontal {
            width: 500px;
            height: 700px;
            padding: 5px;
            background-color: rgb(255,255,255,0.6);
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
            backdrop-filter: blur(5px);
        }*/

        .form-control {
            width: 60%;
        }
    </style>


</head>




















<body>
    <div class="container">
        <div class="form-container">
            <h2>REGISTRATION</h2>
            
            
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">

                    
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group" style="padding: 4px 7px 2px 0px;">
                        @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FatherName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MotherName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.MotherName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MotherName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10" style="width: 40%">
                            @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.HigherSecondaryAggregateMarks, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10" style="width: 40%">
                            @Html.EditorFor(model => model.HigherSecondaryAggregateMarks, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.HigherSecondaryAggregateMarks, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" style="align-content:center">
                        @Html.LabelFor(model => model.CourseId)
                        @Html.DropDownListFor(model => model.CourseId, new SelectList(ViewBag.Courses, "CourseId", "CourseName"), "Select a Course", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CourseId)
                    </div>



                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Register" class="btn btn-default" />
                        </div>
                    </div>
                </div>
               
            }

            
        
            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
            }
</body>
</html>